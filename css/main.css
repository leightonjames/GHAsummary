/*
 * HTML5 Boilerplate
 *
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html,
button,
input,
select,
textarea {
    color: #222;
}

body {
    font-size: 1em;
    line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight: h5bp.com/i
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 */

img {
    vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
    resize: vertical;
}

/* ==========================================================================
   Chrome Frame prompt
   ========================================================================== */

.chromeframe {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

















/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Image replacement
 */

.ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    /* IE 6/7 fallback */
    *text-indent: -9999px;
}

.ir:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
}

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */

.hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screenreaders, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-o-min-device-pixel-ratio: 5/4),
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid required HTTP connection: h5bp.com/r
   ========================================================================== */

@media print {
    * {
        background: transparent !important;
        color: #000 !important; /* Black prints faster: h5bp.com/s */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links for images, or javascript/internal links
     */

    .ir a:after,
    a[href^="javascript:"]:after,
    a[href^="#"]:after {
        content: "";
    }

    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    thead {
        display: table-header-group; /* h5bp.com/t */
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    img {
        max-width: 100% !important;
    }

    @page {
        margin: 0.5cm;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
.chart {
  position: absolute;
  width: 450px;
  height: 450px;
  top: 50%;
  left: 50%;
  margin: -225px 0 0 -225px;
}
.doughnutTip {
  position: absolute;
  min-width: 30px;
  max-width: 300px;
  padding: 5px 15px;
  border-radius: 1px;
  background: rgba(0,0,0,.8);
  color: #ddd;
  font-size: 17px;
  text-shadow: 0 1px 0 #000;
  text-transform: uppercase;
  text-align: center;
  line-height: 1.3;
  letter-spacing: .06em;
  box-shadow: 0 1px 3px rgba(0,0,0,0.5);
  pointer-events: none;
  &::after {
      position: absolute;
      left: 50%;
      bottom: -6px;
      content: "";
      height: 0;
      margin: 0 0 0 -6px;
      border-right: 5px solid transparent;
      border-left: 5px solid transparent;
      border-top: 6px solid rgba(0,0,0,.7);
      line-height: 0;
  }
}
.doughnutSummary {
  position: absolute;
  top: 50%;
  left: 50%;
  color: #d5d5d5;
  text-align: center;
  text-shadow: 0 -1px 0 #111;
  cursor: default;
}
.doughnutSummaryTitle {
  position: absolute;
  top: 50%;
  width: 100%;
  margin-top: -27%;
  font-size: 22px;
  letter-spacing: .06em;
}
.doughnutSummaryNumber {
  position: absolute;
  top: 50%;
  width: 100%;
  margin-top: -15%;
  font-size: 55px;
}
.chart path:hover { opacity: 0.65; }
.parallax-container {
	width:100%;
	height:70%;
}
#canvas_container {
                width: 500px;
				height: 500px;
                margin: 0 auto;
            }
#overlay {
    position: relative;
    left: 0px;
    top: 50px;
    z-index: 50;
}
.canvas {
  -webkit-perspective: 1000;
          perspective: 1000;
		  padding-bottom: 250px;
}

.box {
  position: relative;
  z-index: 5;
  top: 50%;
  left: 50%;
  margin: -50px 0 0 -50px;
  height: 100px;
  width: 100px;
  -webkit-transform: rotate3d(1, 0, 0, 45deg) translate3d(0, 200%, 0);
          transform: rotate3d(1, 0, 0, 45deg) translate3d(0, 200%, 0);
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  text-align: center;
  font-size: 33.33333px;
  line-height: 3;
  background-color: #dfcea9;
  border-color: rgba(0, 0, 0, 0.1);
}
.box .latch,
.box .bottom,
.box .side {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  -webkit-transition: -webkit-transform 250ms linear;
          transition: transform 250ms linear;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
  background-color: inherit;
  border-color: inherit;
}
.box .latch {
  height: 50%;
  top: inherit;
  left: inherit;
  bottom: inherit;
  right: inherit;
  -webkit-transform-origin: inherit;
      -ms-transform-origin: inherit;
          transform-origin: inherit;
}
.box .target,
.box .all {
  display: block;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  border: 2px solid;
  border-color: inherit;
  color: rgba(0, 0, 0, 0.4);
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 700;
  font-family: Impact, Haettenschweiler sans-serif;
  background-image: -webkit-linear-gradient(right, transparent, transparent 50%, rgba(0, 0, 0, 0.1) 50%, transparent);
  background-image: linear-gradient(to left, transparent, transparent 50%, rgba(0, 0, 0, 0.1) 50%, transparent);
  background-size: 4px 4px;
}
.box .target:hover,
.box .all:hover {
  background-color: rgba(0, 0, 0, 0.1);
  outline: 0;
}
.box .target:focus,
.box .all:focus {
  background: #fe4466;
  outline: 0;
}
.box .right .latch .target,
.box .left .latch .target {
  background-image: -webkit-linear-gradient(bottom, transparent, transparent 50%, rgba(0, 0, 0, 0.1) 50%, transparent);
  background-image: linear-gradient(to top, transparent, transparent 50%, rgba(0, 0, 0, 0.1) 50%, transparent);
}
.box .back {
  bottom: 100%;
  top: auto;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
  -webkit-transform-origin: 100% 100%;
      -ms-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}
.box .back.folded,
.box .back .latch.folded {
  -webkit-transform: rotate3d(1, 0, 0, -90deg) translate3d(0, 0, 0);
          transform: rotate3d(1, 0, 0, -90deg) translate3d(0, 0, 0);
}
.box .back .latch {
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
}
.box .front {
  top: 100%;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
  -webkit-transform-origin: 0 0;
      -ms-transform-origin: 0 0;
          transform-origin: 0 0;
}
.box .front > .target {
  -webkit-transform: rotateZ(180deg);
          transform: rotateZ(180deg);
}
.box .front.folded,
.box .front .latch.folded {
  -webkit-transform: rotate3d(1, 0, 0, 90deg) translate3d(0, 0, 0);
          transform: rotate3d(1, 0, 0, 90deg) translate3d(0, 0, 0);
}
.box .front .latch {
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
}
.box .left {
  right: 100%;
  left: auto;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
  -webkit-transform-origin: 100% 100%;
      -ms-transform-origin: 100% 100%;
          transform-origin: 100% 100%;
}
.box .left > .target {
  -webkit-transform: rotateZ(-90deg);
          transform: rotateZ(-90deg);
}
.box .left.folded,
.box .left .latch.folded {
  -webkit-transform: rotate3d(0, 1, 0, 90deg) translate3d(0, 0, 0);
          transform: rotate3d(0, 1, 0, 90deg) translate3d(0, 0, 0);
}
.box .left .latch {
  height: 100%;
  width: 50%;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
}
.box .right {
  left: 100%;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
  -webkit-transform-origin: 0 0;
      -ms-transform-origin: 0 0;
          transform-origin: 0 0;
}
.box .right > .target {
  -webkit-transform: rotateZ(90deg);
          transform: rotateZ(90deg);
}
.box .right.folded,
.box .right .latch.folded {
  -webkit-transform: rotate3d(0, 1, 0, -90deg) translate3d(0, 0, 0);
          transform: rotate3d(0, 1, 0, -90deg) translate3d(0, 0, 0);
}
.box .right .latch {
  height: 100%;
  width: 50%;
  -webkit-transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
          transform: rotate3d(0, 0, 0, 0) translate3d(0, 0, 0);
}
/* CSS Document */

